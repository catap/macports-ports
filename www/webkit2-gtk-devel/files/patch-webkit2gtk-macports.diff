commit 504d7c6714f59b27028a43949f0088f9c19b39d7
Date:   Sun Oct 13 16:03:12 2019 -0700

    webkit2-gtk: patchset to enable build on MacPorts
    
    presently Mojave against 10.14 SDK, building X11

diff --git Source/JavaScriptCore/shell/PlatformGTK.cmake Source/JavaScriptCore/shell/PlatformGTK.cmake
index c4ac7c9a..cf2fc2d6 100644
--- Source/JavaScriptCore/shell/PlatformGTK.cmake
+++ Source/JavaScriptCore/shell/PlatformGTK.cmake
@@ -1,3 +1,7 @@
 list(APPEND jsc_LIBRARIES
     ${GLIB_LIBRARIES}
 )
+
+list(APPEND jsc_PRIVATE_INCLUDE_DIRECTORIES
+	${WTF_DIR}
+)
diff --git Source/WTF/CMakeLists.txt Source/WTF/CMakeLists.txt
index 7c615c55..dd221b1a 100644
--- Source/WebCore/CMakeLists.txt
+++ Source/WebCore/CMakeLists.txt
@@ -190,6 +190,10 @@ set(WebCore_SYSTEM_INCLUDE_DIRECTORIES
     "${WEBCORE_DIR}/xml/parser"
 )
 
+list(APPEND WebCore_SYSTEM_INCLUDE_DIRECTORIES
+	${PAL_DIR}
+)
+
 set(WebCore_IDL_INCLUDES
     css
     dom
--- Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp.orig	2023-04-17 03:53:50.000000000 -0400
+++ Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp	2023-05-16 14:33:02.000000000 -0400
@@ -1145,7 +1145,7 @@
     if (GST_STATE(m_pipeline.get()) < GST_STATE_PAUSED)
         return MediaTime::invalidTime();
 
-    int64_t duration = 0;
+    gint64 duration = 0;
     if (!gst_element_query_duration(m_pipeline.get(), GST_FORMAT_TIME, &duration) || !GST_CLOCK_TIME_IS_VALID(duration)) {
         GST_DEBUG_OBJECT(pipeline(), "Time duration query failed for %s", m_url.string().utf8().data());
         // https://www.w3.org/TR/2011/WD-html5-20110113/video.html#getting-media-metadata
@@ -1908,7 +1908,7 @@
             GUniqueOutPtr<GstStructure> responseHeaders;
             if (gst_structure_get(structure, "response-headers", GST_TYPE_STRUCTURE, &responseHeaders.outPtr(), nullptr)) {
                 CString contentLengthHeaderName = httpHeaderNameString(HTTPHeaderName::ContentLength).utf8();
-                uint64_t contentLength = 0;
+                guint64 contentLength = 0;
                 if (!gst_structure_get_uint64(responseHeaders.get(), contentLengthHeaderName.data(), &contentLength)) {
                     // souphttpsrc sets a string for Content-Length, so
                     // handle it here, until we remove the webkit+ protocol
@@ -4092,8 +4092,8 @@
     if (!webkitGstCheckVersion(1, 18, 0) && !m_fpsSink)
         return false;
 
-    uint64_t totalVideoFrames = 0;
-    uint64_t droppedVideoFrames = 0;
+    guint64 totalVideoFrames = 0;
+    guint64 droppedVideoFrames = 0;
     if (webkitGstCheckVersion(1, 18, 0)) {
         GUniqueOutPtr<GstStructure> stats;
         g_object_get(m_videoSink.get(), "stats", &stats.outPtr(), nullptr);
diff --git Source/WebCore/platform/graphics/gstreamer/mse/WebKitMediaSourceGStreamer.cpp Source/WebCore/platform/graphics/gstreamer/mse/WebKitMediaSourceGStreamer.cpp
index 95966746d3ea..0ac9983b5c31 100644
--- Source/WebCore/platform/graphics/gstreamer/mse/WebKitMediaSourceGStreamer.cpp
+++ Source/WebCore/platform/graphics/gstreamer/mse/WebKitMediaSourceGStreamer.cpp
@@ -737,7 +737,7 @@ static gboolean webKitMediaSrcSendEvent(GstElement* element, GstEvent* event)
         double rate;
         GstFormat format;
         GstSeekType startType;
-        int64_t start;
+        gint64 start;
         gst_event_parse_seek(event, &rate, &format, nullptr, &startType, &start, nullptr, nullptr);
         if (format != GST_FORMAT_TIME || startType != GST_SEEK_TYPE_SET) {
             GST_ERROR_OBJECT(element, "Rejecting unsupported seek event: %" GST_PTR_FORMAT, event);
